# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pipeline_pb2 as pipeline__pb2


class gatewayStub(object):
  """prodide service definition:
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.push_data = channel.stream_unary(
        '/provenance_system.gateway/push_data',
        request_serializer=pipeline__pb2.Grid_data.SerializeToString,
        response_deserializer=pipeline__pb2.reply.FromString,
        )


class gatewayServicer(object):
  """prodide service definition:
  """

  def push_data(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_gatewayServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'push_data': grpc.stream_unary_rpc_method_handler(
          servicer.push_data,
          request_deserializer=pipeline__pb2.Grid_data.FromString,
          response_serializer=pipeline__pb2.reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'provenance_system.gateway', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
